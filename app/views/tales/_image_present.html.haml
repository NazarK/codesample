.row
  %div{style:"position:absolute;padding:5px;z-index:2;"}
    %span
      %button.btn.btn-xs.btn-default{onclick: "ImageCropComp.popup(#{f.object.id}, '#{f.object.image.url}');return false;"}
        %i.fa.fa-crop{title: "crop image"}
      = f.simple_fields_for :crop do |crop|
        = crop.input :w, as: :hidden, input_html: { value: f.object.crop.dig(:w) }
        = crop.input :h, as: :hidden, input_html: { value: f.object.crop.dig(:h) }
        = crop.input :x, as: :hidden, input_html: { value: f.object.crop.dig(:x) }
        = crop.input :y, as: :hidden, input_html: { value: f.object.crop.dig(:y) }
    %span
      %button.btn.btn-xs.btn-default{onclick: "ImageFiltersComp.popup(#{f.object.id}, '#{f.object.image.url(:display)}');return false;"}
        %i.fa.fa-adjust{title: "image filters"}
      = f.simple_fields_for :filters do |filters|
        = filters.input :filters, as: :hidden, input_html: { value: f.object.filters.dig(:filters) }
        = filters.input :brightness, as: :hidden, input_html: { value: f.object.filters.dig(:brightness) }
        = filters.input :contrast, as: :hidden, input_html: { value: f.object.filters.dig(:contrast) }
        = filters.input :grayscale, as: :hidden, input_html: { value: f.object.filters.dig(:grayscale) }
        = filters.input :saturate, as: :hidden, input_html: { value: f.object.filters.dig(:saturate) }
        = filters.input :blur, as: :hidden, input_html: { value: f.object.filters.dig(:blur) }
    %span
      %button.btn.btn-xs.btn-default{onclick: "ImageTextRef.popup(#{f.object.id}, '#{f.object.image.url(:display)}');return false;"}
        %i.fa.fa-font{title: "text overlay"}
      = f.simple_fields_for :text_overlay do |text_overlay|
        = text_overlay.input :text, as: :hidden, input_html: { value: f.object.text_overlay.dig(:text) }
        = text_overlay.input :font, as: :hidden, input_html: { value: f.object.text_overlay.dig(:font) }
        = text_overlay.input :font_size, as: :hidden, input_html: { value: f.object.text_overlay.dig(:font_size) }
        = text_overlay.input :bold, as: :hidden, input_html: { value: f.object.text_overlay.dig(:bold) }
        = text_overlay.input :color, as: :hidden, input_html: { value: f.object.text_overlay.dig(:color) }
        = text_overlay.input :stroke_color, as: :hidden, input_html: { value: f.object.text_overlay.dig(:stroke_color) }
        = text_overlay.input :left, as: :hidden, input_html: { value: f.object.text_overlay.dig(:left) }
        = text_overlay.input :top, as: :hidden, input_html: { value: f.object.text_overlay.dig(:top) }
        = text_overlay.input :width, as: :hidden, input_html: { value: f.object.text_overlay.dig(:width) }
        = text_overlay.input :height, as: :hidden, input_html: { value: f.object.text_overlay.dig(:height) }

  %a.no-decoration{href: f.object.image.url(:crop), target: "_blank",style:"cursor:pointer;"}
    = image_tag f.object.image.url(:display),
      class: "thumb",
      style: "vertical-align:top;max-height:80px;max-width:80px;filter: #{f.object.filters[:filters]};z-index:1;",
      data: { width: (size = Paperclip::Geometry.from_file(f.object.image.path(:display))).width,
              height: size.height }
